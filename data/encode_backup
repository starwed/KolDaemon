

###
// ====================================================================
//       URLEncode and URLDecode functions
//
// Copyright Albion Research Ltd. 2002
// http://www.albionresearch.com/
//
// You may copy these functions providing that 
// (a) you leave this copyright notice intact, and 
// (b) if you use these functions on a publicly accessible
//     web site you include a credit somewhere on the web site 
//     with a link back to http://www.albionresarch.com/
//
// If you find or fix any bugs, please let us know at albionresearch.com
//
// SpecialThanks to Neelesh Thakur for being the first to
// report a bug in URLDecode() - now fixed 2003-02-19.
// ====================================================================
###
URLEncode2 =  (plaintext)=>
	# The Javascript escape and unescape functions do not correspond
	#with what browsers actually do...
	SAFECHARS = "0123456789" +					# Numeric
				"ABCDEFGHIJKLMNOPQRSTUVWXYZ" +	# Alphabetic
				"abcdefghijklmnopqrstuvwxyz" +
				"-_.!~*'()";					# RFC2396 Mark characters
	HEX = "0123456789ABCDEF";

	
	encoded = "";
	for ch, i in plaintext.split ''
		if ch is "+"
			 encoded+="%2B"
		else if ch is " "
			encoded += "+";				# x-www-urlencoded, rather than %20
		else if SAFECHARS.indexOf(ch) isnt -1
			encoded += ch;
		else
			charCode = ch.charCodeAt(0)
			if charCode > 255
				window.alert("Unicode Character '#{ch}' cannot be encoded using standard URL encoding.\n"
					+ "(URL encoding only supports 8-bit characters.)\n"
					+ "A space will be substituted." )
				encoded += "+"
			else 
				encoded += "%";
				encoded += HEX.charAt((charCode >> 4) & 0xF);
				encoded += HEX.charAt(charCode & 0xF);
	return encoded;